name: Deploy to Docker Hub

on:
  release:
    types: [published]

jobs:

  build:
    runs-on: ubuntu-latest
    steps:

    - name: Checkout source code
      uses: actions/checkout@v2
      with:
        submodules: 'true'


    - name: Set up QEMU for more platforms
      uses: docker/setup-qemu-action@v1
      with:
        platforms: all


    - name: Set docker build as alias to buildx (multiarch build)
      uses: docker/setup-buildx-action@v1
      id: buildx
      with:
        install: false


    - name: Deploy to Docker Hub
      if: success() && startsWith(github.ref, 'refs/tags/v')
      env:
        GITHUB_REF_TAG: ${{ github.ref }}
        DOCKER_REGISTRY: docker.io
        DOCKER_IMAGE: grafolean/grafolean-netflow-bot
        DOCKER_USER: grafolean
        DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
        BUILD_PLATFORMS: linux/arm/v7
      run: |
        export VERSION=${GITHUB_REF_TAG:10:50}
        echo "Version is $VERSION"
        export LAST_KNOWN_VERSION=`git tag -l --sort=-version:refname "v*.*.*" | grep -v rc | head -n 1 | tr -d '[:space:]'`
        echo "Last known version is $LAST_KNOWN_VERSION"
        docker login -u $DOCKER_USER -p $DOCKER_PASSWORD $DOCKER_REGISTRY
        docker pull "docker.io/$DOCKER_IMAGE" || true
        [ "$LAST_KNOWN_VERSION" == "$VERSION" ] && echo "MARKING AS LATEST!" || echo "NOT MARKING AS LATEST!"
        [ "$LAST_KNOWN_VERSION" == "$VERSION" ] && docker buildx build --push --platform "$BUILD_PLATFORMS" -t "docker.io/$DOCKER_IMAGE:$VERSION" -t "docker.io/$DOCKER_IMAGE:latest" --build-arg VERSION=$VERSION --build-arg VCS_REF=$GITHUB_SHA --build-arg BUILD_DATE=$(date -u +'%Y-%m-%dT%H:%M:%SZ') . || docker buildx build --push --platform "$BUILD_PLATFORMS" -t "docker.io/$DOCKER_IMAGE:$VERSION" --build-arg VERSION=$VERSION --build-arg VCS_REF=$GITHUB_SHA --build-arg BUILD_DATE=$(date -u +'%Y-%m-%dT%H:%M:%SZ') .
